# Diese docker-compose.yml dient ausschließlich der lokalen Entwicklung. Sie
# modelliert die Produktivumgebung, in der Ihr Projekt im myLab ausgeführt
# wird, also das Zusammenspiel des Webservers, auf dem Ihr Projekt liegt, dem
# Datenbankserver und PhpMyAdmin.
#
# Führen Sie dazu im Hauptordner Ihres Repositories (in dem diese Datei liegt),
# in einem Terminal den Befehl
#
#     docker-compose up
#
# aus. Anschließend ist Ihr Projekt unter http://localhost:8000, und PhpMyAdmin
# unter http://localhost:8080 erreichbar. Änderungen am Code sind sofort, und
# ohne Neustart der Umgebung sichtbar. Sie können die Umgebung wieder beenden,
# indem Sie in dem entsprechenden Terminal die Tastenkombination Strg + C
# eingeben.
# 
# HINWEIS ZU PASSWÖRTERN:
#
# Normalerweise sollte man sich hüten, Passwörter jeglicher Art in Dateien
# zu speichern, die im Repository abgelegt werden. Die in dieser Datei abgelegten
# Zugangsdaten zur Datenbank bzw. dem Root-Account von PhpMyAdmin sind da eine
# Ausnahme, da sie ausschließlich der lokalen Entwicklung dienen, und nicht von
# außen erreichbar sind. Die Produktivumgebung verwendet entsprechend komplett
# andere (und von Gruppe zu Gruppe unterschiedliche) Passwörter.

version: '3'
services:
  project:
    build: .
    ports:
    - "8000:8000"
    volumes:
      - ./zyklus_app:/usr/src/app/
    links:
    - db
    environment:
      MYSQL_SERVER: db
      MYSQL_PORT: 3306
      MYSQL_DATABASE: dbuwp
      MYSQL_USERNAME: webapp
      MYSQL_USERPASS: hopper
      DJANGO_DEBUG: "1"
      DJANGO_SECRET: "django-insecure-d0^)g)s47#m_f55+$)4mbzei#@jvf4ghktd+n*zkc&f+s7(sq0"
  db:
    image: "mariadb:10"
    environment:
      MYSQL_ROOT_PASSWORD: geheim
      MYSQL_DATABASE: dbuwp
      MYSQL_USER: webapp
      MYSQL_PASSWORD: hopper
    volumes:
      - dbvolume:/var/lib/mysql
  phpmyadmin:
    image: "phpmyadmin/phpmyadmin:5"
    ports:
    - "8080:80"
    links:
    - db
    environment:
      PMA_USER: webapp
      PMA_PASSWORD: hopper
volumes:
  dbvolume: {}
